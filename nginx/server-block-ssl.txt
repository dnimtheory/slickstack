####################################################################################################
#### author: SlickStack ############################################################################
#### link: https://slickstack.io ###################################################################
#### mirror: http://mirrors.slickstack.io/nginx/server-block-ssl.txt ###############################
#### path: n/a (boilerplate) #######################################################################
#### destination: /etc/nginx/sites-available/default (after install) ###############################
#### purpose: Nginx server block file boilerplate ##################################################
#### ss version: SlickStack alpha ss4c #############################################################
#### module version: Nginx (Extras) 1.15.8 #########################################################
####################################################################################################

## Ref: https://blog.tylerbuchea.com/nginx-lets-encrypt-certbot-manual-installation/
## Ref: https://ncona.com/2017/01/free-https-with-lets-encrypt/
## Ref: https://certbot.eff.org/docs/using.html
## Ref: https://advancedweb.hu/2018/06/05/letsencrypt_webroot_vs_standalone/

## this catch-all server block redirects all erroneous traffic to the canonical domain ##
server {
    listen                 80 default_server;
    listen                 443 ssl default_server;
    listen                 [::]:80;
    listen                 [::]:443 ssl;
    server_name            _;
    ssl_certificate        /etc/ssl/nginx.crt;
    ssl_certificate_key    /etc/ssl/nginx.key;
    ## ssl_certificate /etc/letsencrypt/live/@DOMAIN/fullchain.pem;
    ## ssl_certificate_key /etc/letsencrypt/live/@DOMAIN/privkey.pem;
    ## ssl_trusted_certificate /etc/letsencrypt/live/YOUR-DOMAIN/chain.pem; ## for stapling A+ score
    return 301             https://@DOMAIN$request_uri;
}

####################################################################################################
#### Nginx Server Block: Canonical Domain (Optimized For CloudFlare = No HTTP/2) ###################
####################################################################################################

server {
    listen                 443 ssl; ## 443 ssl http2;
    listen                 [::]:443 ssl ipv6only=on; ## 443 ssl http2 ipv6only=on;
    server_name            @DOMAIN;
    if ($http_host != "@DOMAIN") {
        return 301             $scheme://@DOMAIN$request_uri;
    }
    
    ## redirect */index.php requests
    ## Ref: https://stackoverflow.com/a/21813759/1718491
    
    if ($request_uri ~* "^(.*/)index\.php$") {
        return 301 $1;
    }

####################################################################################################
#### Nginx Server Block: FastCGI Cache Settings ####################################################
####################################################################################################

    ## set to either 1/0 to skip fastcgi cache by default ##
    set $skip_cache @FASTCGI;
    
    ## post requests should always skip the cache
    if ($request_method = POST) {
        set $skip_cache 1;
    }
    
    ## query strings should always skip the cache
    if ($query_string != "") {
        set $skip_cache 1;
    }
    
    ## sensitive wordpress urls should always skip the cache
    if ($request_uri ~* "index.php|/account.*|/cart.*|/checkout.*|/contact.*|/dashboard.*|/login.*|/my-.*|/order.*|/profile.*|/register.*|/settings.*|/view.*|/wc-api.*|/wp-admin.*|wp-.*.php") {
        set $skip_cache 1;
    }
    
    ## logged in users or recent commenters etc should always skip the cache
    if ($http_cookie ~* "wordpress_logged_in|wp-postpass|woocommerce_items_in_cart|woocommerce_cart_hash|comment_author") {
        set $skip_cache 1;
    }
    
    ## woocommerce cart actions should always skip the cache
    # if ($arg_add-to-cart != "") {
    #    set $skip_cache 1;
    # }
    
    ## woocommerce shoppers should always skip the cache
    # if ($http_cookie ~* "cookie_woocommerce_items_in_cart") {
    #    set $skip_cache 1;
    # }
    
    ## woocommerce shoppers should always skip the cache
    # if ($cookie_woocommerce_items_in_cart != "0") {
    #    set $skip_cache 1;
    # }

####################################################################################################
#### Server Block: Try Files Settings ##############################################################
####################################################################################################

    location / {
        ## first try physical files, then directories, otherwise query the wordpress php index
        try_files $uri $uri/ /index.php?$args;
	## force trailing slashes on urls... do not enable for bbpress/buddypress
        # rewrite ^([^.]*[^/])$ $1/ permanent;
    }

####################################################################################################
#### Server Block: PHP-FPM Routing Settings ########################################################
####################################################################################################

    location ~ \.php$ {
        set $rt_session "";
        if ($http_cookie ~* "wp_woocommerce_session_[^=]*=([^%]+)%7C") {
                set $rt_session wp_woocommerce_session_$1;
        }	
        if ($skip_cache = 0 ) {
                more_clear_headers "Set-Cookie*";
                set $rt_session "";
        }

        ## include /etc/nginx/fastcgi_params for older nginx versions
        include /etc/nginx/fastcgi.conf;
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        ## fastcgi_pass unix:/var/run/php/php7.2-fpm.sock
	fastcgi_pass unix:/run/php/php7.2-fpm.sock;
	fastcgi_read_timeout 300;
        fastcgi_index index.php;
        fastcgi_cache WORDPRESS;
        fastcgi_cache_valid 200 301 404 @CACHEVALID;
        fastcgi_cache_bypass $skip_cache;
        fastcgi_no_cache $skip_cache;
        ## below line should not be needed
        # include snippets/fastcgi-php.conf;
    }
    
    location = /.well-known* {
        allow all;
    }

    #### HIDDEN FILES ####
    location ~ /\. {
        ## block any attempted attacks or access
	# log_not_found off;
	# deny all;
    }

    #### BRUTE FORCE PROTECTION ####
    location = /wp-login.php {
        ## limit access to only one request per second per ip address
        limit_req zone=one burst=1 nodelay;
        ## we must re-include this routing for php-fpm ##
        include /etc/nginx/fastcgi.conf;
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        ## fastcgi_pass unix:/var/run/php/php7.2-fpm.sock
	fastcgi_pass unix:/run/php/php7.2-fpm.sock;
	fastcgi_read_timeout 300;
        fastcgi_index index.php;
        fastcgi_cache WORDPRESS;
        fastcgi_cache_valid 200 301 404 @CACHEVALID;
        fastcgi_cache_bypass $skip_cache;
        fastcgi_no_cache $skip_cache;
    }

####################################################################################################
#### Server Block: Favicon Settings ################################################################
####################################################################################################

    location = /favicon.ico {
        ## 204 error better than 404 error if not found ##
        try_files $uri =204;
    }
    
####################################################################################################
#### Server Block: Robots.txt Settings (Optimized For Virtual Robots.txt MU Plugin) ################
####################################################################################################
    
    location = /robots.txt {
        ## first try files, then directories, otherwise query index.php ##
        try_files $uri $uri/ /index.php?$args;
	allow all;
    }
    
####################################################################################################
#### Server Block: Ads.txt Settings ################################################################
####################################################################################################
    
    location = /ads.txt {
        ## first try files, then directories, otherwise query index.php ##
        try_files $uri $uri/ /index.php?$args;
	allow all;
    }
    
####################################################################################################
#### Server Block: WP-Config Settings ##############################################################
####################################################################################################
    
    location = /wp-config*.php {
	deny all;
    }
    
####################################################################################################
#### Server Block: XML-RPC Settings ################################################################
####################################################################################################

    #### XML-RPC ####
    location = /xmlrpc.php {
	deny all;
    }
    
    #### WP-MAIL ####
    location = /wp-mail.php {
	deny all;
    }
    
    #### WP-LINKS-OPML ####
    location = /wp-links-opml.php {
	deny all;
    }
    
    #### WP-TRACKBACK ####
    location = /wp-trackback.php {
	deny all;
    }
    
    #### WP INFO ####
    location ~* (license|licence|readme)\.(html|txt) {
	deny all;
    }
    
    #### WP-DEBUG ####
    location ~ /wp-content/debug\.log {
	deny all;
    }
    
    #### MONIT PANEL ####
    location /monit/ {
        rewrite ^/monit/(.*) /$1 break;
        proxy_ignore_client_abort on;
        proxy_pass https://127.0.0.1:2812;
        proxy_set_header Host $host;
	proxy_redirect https://127.0.0.1:2812 /monit;
    }

    #### GIT CONFIG ####
    location = /.git/config {
        deny all;
    }

    #### WP DIRS ####
    location ~* /(?:wp-includes|wp-content|mu-plugins|uploads)/.*\.php$ {
        deny all;
    }

    #### RESOURCE RENDER ####
    location ~ \.(eot|ttf|ttc|otf|woff|woff2|svg|css|js)$ {
        ## avoid any render problems in firefox/ie browsers
        add_header Access-Control-Allow-Origin "*";
	expires max;
    }

####################################################################################################
#### Server Block: Static Resources Settings #######################################################
####################################################################################################

    ## cloudflare will overwrite these expires headers if enabled ##
    location ~* \.(atom|bmp|bz2|css|doc|docx|eot|gif|gz|ico|jpeg|jpg|js|mid|midi|mp4|ogg|ogv|otf|png|ppt|rar|rss|rtf|svg|svgz|tar|tgz|ttf|wav|woff|xls|zip)$ {
        expires max;
    }
    
    #### EASY DIGITAL DOWNLOADS ####
    location ~ ^/wp-content/uploads/edd/(.*?)\.zip$ {
        rewrite / permanent;
    }

}
